<?xml version="1.0" encoding="utf-8"?>
<!-- $Id$ -->
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
         xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
         xmlns:s="http://purl.oclc.org/dsdl/schematron"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
         ns="http://hashtable.de/ns/histvv">

  <s:ns prefix="v" uri="http://hashtable.de/ns/histvv"/>

  <start>
    <ref name="vv"/>
  </start>

  <define name="xml.lang.attribute">
    <attribute name="xml:lang">
      <data type="language">
        <param name="length">2</param>
      </data>
    </attribute>
  </define>

  <define name="xml.id.attribute">
    <attribute name="xml:id">
      <data type="ID"/>
    </attribute>
  </define>

  <define name="basic.attributes">
    <optional>
      <ref name="xml.id.attribute"/>
    </optional>
  </define>

  <define name="common.attributes">
    <ref name="basic.attributes"/>
    <optional>
      <ref name="xml.lang.attribute"/>
    </optional>
  </define>

  <define name="titel">
    <element name="titel">
      <ref name="common.attributes"/>
      <ref name="text-content"/>
    </element>
  </define>

  <define name="vv">
    <a:documentation>
      Wurzelelement für ein Vorlesungsverzeichnis
    </a:documentation>
    <element name="vv">
      <ref name="common.attributes"/>
      <optional>
        <attribute name="id">
          <a:documentation></a:documentation>
          <data type="NMTOKEN">
            <param name="pattern">[a-z]+-[0-9]{4}-(ws|ss)</param>
          </data>
        </attribute>
      </optional>
      <ref name="kopf"/>
      <optional>
        <ref name="seite"/>
      </optional>
      <ref name="titel"/>
      <optional>
        <element name="untertitel">
          <ref name="common.attributes"/>
          <ref name="text-content"/>
        </element>
      </optional>
      <interleave>
        <oneOrMore>
          <choice>
            <ref name="sachgruppe"/>
            <ref name="übersicht"/>
          </choice>
        </oneOrMore>
        <zeroOrMore>
          <ref name="absatz"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="seite"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="trennlinie"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>

  <define name="kopf">
    <a:documentation>Metadaten</a:documentation>
    <element name="kopf">
      <interleave>
        <optional>
          <element name="quelle">
            <text/>
          </element>
        </optional>
        <optional>
          <element name="universität">
            <text/>
          </element>
        </optional>
        <element name="semester">
          <choice>
            <value>Winter</value>
            <value>Sommer</value>
          </choice>
        </element>
        <element name="beginn">
          <ref name="partial-date"/>
        </element>
        <element name="ende">
          <ref name="partial-date"/>
        </element>
        <ref name="status"/>
      </interleave>
    </element>
  </define>

  <define name="status">
    <element name="status">
      <optional>
        <attribute name="komplett">
          <value>ja</value>
        </attribute>
      </optional>
      <ref name="transkribent"/>
      <zeroOrMore>
        <ref name="korrigiert"/>
      </zeroOrMore>
    </element>
  </define>

  <define name="transkribent">
    <element name="transkribent">
      <s:pattern id="transkribent">
        <s:rule context="v:transkribent">
          <s:assert test="not(normalize-space(.) = '')">
            Bitte Transkribenten eintragen.
          </s:assert>
        </s:rule>
      </s:pattern>
      <text/>
    </element>
  </define>

  <define name="korrigiert">
    <element name="korrigiert">
      <element name="durch"><text/></element>
      <element name="am"><text/></element>
      <optional>
        <element name="anmerkungen"><text/></element>
      </optional>
    </element>
  </define>

  <define name="übersicht">
    <a:documentation>
      Hauptgliederung späterer Vorlesungsverzeichnisse ("Systematische
      Übersicht", "Übersicht nach der Ordnung der Lehrer", "Übersicht
      nach Tagesstunden" usw.)
    </a:documentation>
    <element name="übersicht">
      <ref name="common.attributes"/>
      <optional>
        <attribute name="ref"/>
      </optional>
      <optional>
        <ref name="titel"/>
      </optional>
      <interleave>
        <zeroOrMore>
          <ref name="sachgruppe"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="absatz"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="seite"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="trennlinie"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>

  <define name="sachgruppe">
    <a:documentation>
      Gliederung der Fachgebiete, Themen etc.
    </a:documentation>
    <element name="sachgruppe">
      <s:pattern id="sachgruppe">
        <s:rule context="v:sachgruppe">
          <s:assert test="v:sachgruppe
                          or v:veranstaltung
                          or v:veranstaltungsgruppe
                          or v:veranstaltungsverweis
                          or v:absatz
                          or .//v:siehe">
            Sachgruppe muß Veranstaltungsangaben, weitere Sachgruppen
            oder Verweis auf andere Sachgruppe enthalten.
          </s:assert>
        </s:rule>
      </s:pattern>
      <ref name="common.attributes"/>
      <optional>
        <attribute name="ref"/>
      </optional>
      <optional>
        <ref name="titel"/>
      </optional>
      <interleave>
        <!--
           Um das Editieren zu erleichtern, wird das Vorhandensein
           entweder einer <veranstaltung> oder einer <sachgruppe> an
           dieser Stelle nicht erzwungen. TODO: Es sollte vielleicht
           durch eine Schematron-Regel sichergestellt werden.
        -->
        <zeroOrMore>
          <ref name="sachgruppe"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="veranstaltung"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="veranstaltungsverweis"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="veranstaltungsgruppe"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="absatz"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="seite"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="trennlinie"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>

  <define name="model.veranstaltung">
    <interleave>
      <ref name="text-content"/>
      <!-- 
           <dozent> bzw. <ders> sind optional um das Editieren zu
           erleichtern. TODO: Eine Schematron-Regel könnte auf fehlende
           Dozentenangaben hinweisen.
      -->
      <zeroOrMore>
        <ref name="dozent"/>
      </zeroOrMore>
      <optional>
        <ref name="ders"/>
      </optional>
      <zeroOrMore>
        <ref name="thema"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="zeit"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="modus"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="gebühr"/>
      </zeroOrMore>
    </interleave>
  </define>

  <define name="veranstaltung">
    <a:documentation>
      einzelne Lehrveranstaltung
    </a:documentation>
    <element name="veranstaltung">
      <ref name="common.attributes"/>
      <!-- 
        Die folgenden Attribute dienen der Angabe von
        Veranstaltungsdaten in Fällen, wo diese nicht über Elemente
        auszeichenbar sind sondern aus dem Kontext erschlossen
        werden. TODO: Eine konsistente Verwendung sollte über
        Schematron-Regeln sichergestellt werden.
      -->
      <optional>
        <attribute name="dozent"/>
      </optional>
      <optional>
        <attribute name="gebühr"/>
      </optional>
      <optional>
        <attribute name="modus"/>
      </optional>
      <optional>
        <attribute name="thema"/>
      </optional>
      <optional>
        <attribute name="zeit"/>
      </optional>

      <ref name="model.veranstaltung"/>
    </element>
  </define>

  <define name="veranstaltungsgruppe">
    <a:documentation>
      Gruppierung von Veranstaltungsangaben; die enthaltenen
      Veranstaltungen erben Daten der Gruppe
    </a:documentation>
    <element name="veranstaltungsgruppe">
      <s:pattern id="veranstaltungsgruppe">
        <s:rule context="v:veranstaltungsgruppe">
          <s:assert test="count(v:veranstaltung) +
                          count(v:veranstaltungsgruppe) +
                          count(v:veranstaltungsverweis)  > 1">
            Veranstaltungsgruppe mit weniger als zwei Veranstaltungen
            ist nicht sinnvoll.
          </s:assert>
        </s:rule>
      </s:pattern>
      <interleave>
        <ref name="common.attributes"/>
        <ref name="model.veranstaltung"/>
        <oneOrMore>
          <ref name="veranstaltung"/>
        </oneOrMore>
        <zeroOrMore>
          <ref name="veranstaltungsverweis"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="veranstaltungsgruppe"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>

  <define name="veranstaltungsverweis">
    <a:documentation>
      Verweis auf Veranstaltungsangabe an anderem Ort
    </a:documentation>
    <element name="veranstaltungsverweis">
      <ref name="common.attributes"/>
      <optional>
        <attribute name="ref">
          <data type="IDREF"/>
        </attribute>
      </optional>
      <ref name="model.veranstaltung"/>
    </element>
  </define>


  <define name="dozent">
    <a:documentation>
      Angaben zum Dozenten
    </a:documentation>
    <element name="dozent">
      <interleave>
        <ref name="common.attributes"/>
        <optional>
          <attribute name="ref"/>
        </optional>
        <!-- 
             Um das Editieren zu erleichtern sind alle Kindelemente
             optional. TODO: Eine Schematron-Regel könnte auf
             unvollständige Dozentenangaben hinweisen.
        -->
        <ref name="model.text"/>
        <optional>
          <ref name="nachname"/>
        </optional>
        <optional>
          <ref name="vorname"/>
        </optional>
        <optional>
          <ref name="nachnamenpräfix"/>
        </optional>
        <optional>
          <ref name="grad"/>
        </optional>
        <optional>
          <ref name="funktion"/>
        </optional>
      </interleave>
    </element>
  </define>

  <define name="nachname">
    <a:documentation>
      Nachname
    </a:documentation>
    <element name="nachname">
      <ref name="common.attributes"/>
      <ref name="model.text"/>
    </element>
  </define>

  <define name="vorname">
    <a:documentation>
      Vorname
    </a:documentation>
    <element name="vorname">
      <ref name="common.attributes"/>
      <ref name="model.text"/>
    </element>
  </define>

  <define name="nachnamenpräfix">
    <a:documentation>
      "von", "van", "de" ...
    </a:documentation>
    <element name="nachnamenpräfix">
      <ref name="common.attributes"/>
      <text/>
    </element>
  </define>

  <define name="grad">
    <a:documentation>
      akademischer Grad
    </a:documentation>
    <element name="grad">
      <ref name="common.attributes"/>
      <ref name="model.text"/>
    </element>
  </define>

  <define name="funktion">
    <a:documentation>
      akademische Funktion
    </a:documentation>
    <element name="funktion">
      <ref name="common.attributes"/>
      <ref name="model.text"/>
    </element>
  </define>

  <define name="ders">
    <a:documentation>
      Auszeichnung für Verweise auf vorhergehenden Dozenten:
      "Derselbe", "Ders." etc.
    </a:documentation>
    <element name="ders">
      <s:pattern id="ders">
        <s:rule context="v:ders">
          <s:assert test="not(string(.) and normalize-space(.) = '')">
            Element 'ders' muß entweder leer bleiben oder Text
            enthalten.
          </s:assert>
        </s:rule>
      </s:pattern>
      <ref name="common.attributes"/>
      <ref name="model.text"/>
    </element>
  </define>

  <define name="thema">
    <a:documentation>
      Auszeichnung für Text, der das Thema der Lehrveranstaltung
      beschreibt
    </a:documentation>
    <element name="thema">
      <ref name="common.attributes"/>
      <ref name="text-content"/>
    </element>
  </define>

  <define name="zeit">
    <a:documentation>
      zur Auszeichnung von Zeitangaben
    </a:documentation>
    <element name="zeit">
      <ref name="common.attributes"/>
      <ref name="text-content"/>
    </element>
  </define>

  <define name="ort">
    <a:documentation>
      zur Auszeichnung von Ortsangaben
    </a:documentation>
    <element name="ort">
      <ref name="common.attributes"/>
      <ref name="model.text"/>
    </element>
  </define>

  <define name="modus">
    <a:documentation>
      z.B. "privatissime" / "öffentlich"
    </a:documentation>
    <element name="modus">
      <ref name="common.attributes"/>
      <ref name="model.text"/>
    </element>
  </define>

  <define name="gebühr">
    <a:documentation>
      Angaben zur Bezahlung einer Lehrveranstaltung,
      z.B. "unentgeltlich"
    </a:documentation>
    <element name="gebühr">
      <ref name="common.attributes"/>
      <ref name="model.text"/>
    </element>
  </define>

  <define name="absatz">
    <a:documentation>
      Textabsatz
    </a:documentation>
    <element name="absatz">
      <ref name="common.attributes"/>
      <interleave>
        <ref name="text-content"/>
        <zeroOrMore>
          <ref name="veranstaltung"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="dozent"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>

  <define name="model.text">
    <a:documentation></a:documentation>
    <interleave>
      <text/>
      <zeroOrMore>
        <ref name="seite"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="sic"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="korrektur"/>
      </zeroOrMore>
    </interleave>
  </define>

  <define name="text-content">
    <a:documentation></a:documentation>
    <interleave>
      <ref name="model.text"/>
      <zeroOrMore>
        <ref name="notiz"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="siehe"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="ort"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="scil"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="antiqua"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="gesperrt"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="kursiv"/>
      </zeroOrMore>
    </interleave>
  </define>

  <define name="seite">
    <a:documentation>Seitenmarkierung</a:documentation>
    <element name="seite">
      <ref name="basic.attributes"/>
      <optional>
        <attribute name="nr">
          <a:documentation>implizite Seitenzahl bei nichtpaginierten Seiten</a:documentation>
          <choice>
            <data type="positiveInteger"/>
            <data type="NMTOKEN">
              <param name="pattern">[a-z0-9]+</param>
            </data>
          </choice>
        </attribute>
      </optional>
      <choice>
        <empty/>
        <data type="positiveInteger"/>
      </choice>
    </element>
  </define>

  <define name="siehe">
    <a:documentation>
      zur Auszeichnung von Verweisen auf Sachgruppen oder
      Veranstaltungen innerhalb des gleichen Dokuments
      (z.B. "s. Dogmatik")
    </a:documentation>
    <element name="siehe">
      <ref name="common.attributes"/>
      <optional>
        <attribute name="ref"/>
      </optional>
      <interleave>
        <ref name="model.text"/>
        <zeroOrMore>
          <ref name="notiz"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="antiqua"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="gesperrt"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="kursiv"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>

  <define name="scil">
    <a:documentation>
      zur Textklärung
    </a:documentation>
    <element name="scil">
      <s:pattern id="scil">
        <s:rule context="v:scil">
          <s:assert test="not(text()='')">
            Leeres 'scil' ist nicht sinnvoll.
          </s:assert>
          <s:assert test="not(@text='???')">
            Attribut 'text' enthält Platzhaltertext ('???').
          </s:assert>
        </s:rule>
      </s:pattern>
      <ref name="common.attributes"/>
      <attribute name="text"/>
      <ref name="model.text"/>
    </element>
  </define>

  <define name="notiz">
    <a:documentation></a:documentation>
    <element name="notiz">
      <s:pattern id="notiz">
        <s:rule context="v:notiz">
          <s:assert test="not(text()='')">
            Leere 'notiz' ist nicht sinnvoll.
          </s:assert>
        </s:rule>
      </s:pattern>
      <ref name="common.attributes"/>
      <optional>
        <attribute name="betreff"/>
      </optional>
      <interleave>
        <ref name="model.text"/>
        <zeroOrMore>
          <ref name="antiqua"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="gesperrt"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="kursiv"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>

  <define name="antiqua">
    <a:documentation>Hervorhebung, antiqua</a:documentation>
    <element name="antiqua">
      <ref name="common.attributes"/>
      <ref name="model.text"/>
    </element>
  </define>

  <define name="gesperrt">
    <a:documentation>Hervorhebung, gesperrt</a:documentation>
    <element name="gesperrt">
      <ref name="common.attributes"/>
      <ref name="model.text"/>
    </element>
  </define>

  <define name="kursiv">
    <a:documentation>Hervorhebung, kursiv</a:documentation>
    <element name="kursiv">
      <ref name="common.attributes"/>
      <ref name="model.text"/>
    </element>
  </define>

  <define name="trennlinie">
    <a:documentation>horizontale Linie</a:documentation>
    <element name="trennlinie">
      <ref name="basic.attributes"/>
      <empty/>
    </element>
  </define>

  <define name="sic">
    <a:documentation>
      Markierung ungewöhnlicher Schreibweisen im Original
    </a:documentation>
    <element name="sic">
      <s:pattern id="sic">
        <s:rule context="v:sic">
          <s:assert test="not(text()='')">
            Leeres 'sic' ist nicht sinnvoll.
          </s:assert>
        </s:rule>
      </s:pattern>
      <ref name="basic.attributes"/>
      <text/>
    </element>
  </define>

  <define name="korrektur">
    <a:documentation>
      Auszeichnung von Korrekturen bei Transkription
    </a:documentation>
    <element name="korrektur">
      <ref name="basic.attributes"/>
      <optional>
        <a:documentation>
          enthält den Originaltext, bleibt leer bei Ergänzungen
        </a:documentation>
        <attribute name="original"/>
      </optional>
      <text/>
    </element>
  </define>

  <define name="partial-date">
    <a:documentation>
      Datumsangabe, die mindestens das Jahr enthalten muss
    </a:documentation>
    <group>
      <ref name="jahr"/>
      <optional>
        <ref name="monat"/>
        <optional>
          <ref name="tag"/>
        </optional>
      </optional>
    </group>
  </define>

  <define name="jahr">
    <a:documentation>Jahreszahl</a:documentation>
    <element name="jahr">
      <ref name="basic.attributes"/>
      <data type="positiveInteger">
        <param name="pattern">[0-9]{4}</param>
      </data>
    </element>
  </define>

  <define name="monat">
    <a:documentation>Monatszahl</a:documentation>
    <element name="monat">
      <ref name="basic.attributes"/>
      <data type="positiveInteger">
        <param name="minInclusive">1</param>
        <param name="maxInclusive">12</param>
      </data>
    </element>
  </define>

  <define name="tag">
    <a:documentation>Tag des Monats</a:documentation>
    <element name="tag">
      <ref name="basic.attributes"/>
      <data type="positiveInteger">
        <param name="minInclusive">1</param>
        <param name="maxInclusive">31</param>
      </data>
    </element>
  </define>

</grammar>
